<?php

namespace WP_Express_Checkout;
use WP_UnitTest_Factory_For_Post;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-06-28 at 07:52:32.
 *
 * @group shortcodes
 *
 * @covers WP_Express_Checkout\Order_Summary_Table
 */
class Order_Summary_TableTest extends \WP_UnitTestCase {

	/**
	 * @var Order_Summary_Table
	 */
	protected $object;
	protected $factory;

	/**
	 * @var Order
	 */
	protected $order;

	/**
	 * @var int
	 */
	protected $product_id;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	public function setUp():void {
		$this->factory = new WP_UnitTest_Factory_For_Post();
		$product_id = $this->factory->create(
			[
				'post_type'  => Products::$products_slug,
				'meta_input' => [
					'ppec_product_upload' => 'dummy'
				]
			]
		);
		$order = Orders::create();
		$order->set_resource_id( "test-resource-id-{$product_id}-{$order->get_id()}" );
		$order->add_data(
			'payer',
			[
				'name' => [
					'given_name' => 'John',
					'surname' => 'Connor',
				],
				'email_address' => 'test@example.com'
			]
		);
		$order->add_data( 'state', 'COMPLETED' );
		$order->add_data( 'shipping_address', 'test shipping address' );
		$order->add_item( Products::$products_slug, $product_id, 42, 2, $product_id );
		$order->add_item( 'coupon', 'Coupon Code: test', -2, 1, 0, false, [ 'code' => "test_$product_id" ] );

		$order->set_currency( 'TEST' );

		$this->product_id = $product_id;
		$this->order      = $order;
		$this->object = new Order_Summary_Table( $order );
	}

	/**
	 * @covers WP_Express_Checkout\Order_Summary_Table::show
	 */
	public function testShow() {
		ob_start();
		$this->object->show( [ 'class' => 'test-table', 'dummytrue' => true, 'dummyfalse' => false ] );
		$output = ob_get_clean();
		$this->assertEquals( ""
			. "<table class=\"test-table\" dummytrue=\"dummytrue\">"
				. "<thead>"
					. "<tr>"
						. "<th>Product</th>"
						. "<th>Subtotal</th>"
					. "</tr>"
				. "</thead>"
				. "<tbody>"
					. "<tr>"
						. "<td>{$this->product_id}&nbsp;<strong>x 2</strong></td>"
						. "<td>TEST84.00</td>"
					. "</tr>"
				. "</tbody>"
				. "<thead>"
					. "<tr>"
						. "<td><strong>Subtotal</strong></td>"
						. "<td><strong>TEST84.00</strong></td>"
					. "</tr>"
				. "</thead>"
				. "<tbody>"
					. "<tr>"
						. "<td>Coupon Code: test&nbsp;</td>"
						. "<td>TEST-2.00</td>"
					. "</tr>"
				. "</tbody>"
				. "<tfoot>"
					. "<tr>"
						. "<td><strong>Total</strong></td>"
						. "<td><strong>TEST82.00</strong></td>"
					. "</tr>"
				. "</tfoot>"
			. "</table>"
			. "",
		$output );
	}

}
