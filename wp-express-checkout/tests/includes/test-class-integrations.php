<?php

namespace WP_Express_Checkout;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-06-28 at 07:52:47.
 *
 * @group integrations
 *
 * @covers WP_Express_Checkout\Integrations
 */
class IntegrationsTest extends \WP_UnitTestCase {

	/**
	 * @var Integrations
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	public function setUp() {
		$this->object = new Integrations;
	}

	/**
	 * @covers WP_Express_Checkout\Integrations::get_member_info_from_api
	 */
	public function testGet_member_info_from_api() {
		$payment = json_decode( file_get_contents( WPEC_TESTS_DIR . '/data/payment-data.json' ), true );
		$ipn_data = $this->object->get_member_info_from_api( $payment );

		$this->assertEqualSetsWithIndex(
			$ipn_data,
			[
				'payer_email'     => 'customer@example.com',
				'first_name'      => 'John',
				'last_name'       => 'Doe',
				'txn_id'          => '5O190127TN364715T',
				'address_street'  => '2211 N First Street',
				'address_city'    => 'San Jose',
				'address_state'   => 'CA',
				'address_zip'     => '95131',
				'address_country' => 'United States',
			]
		);
	}

	/**
	 * @covers WP_Express_Checkout\Integrations::handle_swpm_signup
	 */
	public function testHandle_swpm_signup() {
		require_once WPEC_TESTS_DIR . '/mocks/mock-swmp-functions.php';
		require_once WPEC_TESTS_DIR . '/mocks/mock-swpm-utils.php';
		require_once WPEC_TESTS_DIR . '/mocks/mock-swpm-utils-member.php';

		$payment = json_decode( file_get_contents( WPEC_TESTS_DIR . '/data/payment-data.json' ), true );
		$product = $this->factory->post->create(
			[
				'post_type' => \WP_Express_Checkout\Products::$products_slug,
				'meta_input' => [
					'wpec_product_swpm_level' => 42,
				]
			]
		);

		$this->object->handle_swpm_signup( $payment, 0, $product );

		$this->expectOutputString( 'swpm_handle_subsc_signup_stand_alone' );
	}

	/**
	 * @covers WP_Express_Checkout\Integrations::handle_swpm_signup
	 */
	public function testHandle_swpm_signup__no_level() {
		require_once WPEC_TESTS_DIR . '/mocks/mock-swmp-functions.php';
		require_once WPEC_TESTS_DIR . '/mocks/mock-swpm-utils.php';
		require_once WPEC_TESTS_DIR . '/mocks/mock-swpm-utils-member.php';

		$this->object->handle_swpm_signup( [], 0, 0 );
		$this->expectOutputString( '' );
	}

	/**
	 * @covers WP_Express_Checkout\Integrations::handle_emember_signup
	 */
	public function testHandle_emember_signup() {
		require_once WPEC_TESTS_DIR . '/mocks/mock-emember-functions.php';
		require_once WPEC_TESTS_DIR . '/mocks/mock-emember-auth.php';

		$payment = json_decode( file_get_contents( WPEC_TESTS_DIR . '/data/payment-data.json' ), true );
		$product = $this->factory->post->create(
			[
				'post_type' => \WP_Express_Checkout\Products::$products_slug,
				'meta_input' => [
					'wpec_product_emember_level' => 42,
				]
			]
		);

		$this->object->handle_emember_signup( $payment, 0, $product );

		$this->expectOutputString( 'eMember_handle_subsc_signup_stand_alone' );
	}

	/**
	 * @covers WP_Express_Checkout\Integrations::handle_emember_signup
	 */
	public function testHandle_emember_signup__no_level() {
		require_once WPEC_TESTS_DIR . '/mocks/mock-emember-functions.php';
		require_once WPEC_TESTS_DIR . '/mocks/mock-emember-auth.php';

		$this->object->handle_emember_signup( [], 0, 0 );
		$this->expectOutputString( '' );
	}

}
