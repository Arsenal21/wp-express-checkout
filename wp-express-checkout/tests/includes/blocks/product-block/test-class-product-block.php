<?php

namespace WP_Express_Checkout\Blocks;

use WP_Block_Type_Registry;
use WP_UnitTestCase;
use WP_UnitTest_Factory_For_Post;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-07-14 at 07:00:46.
 *
 * @covers WP_Express_Checkout\Blocks\Product_Block
 * @group blocks
 */
class Product_BlockTest extends WP_UnitTestCase {

	/**
	 * @var Product_Block
	 */
	protected $object;	

	protected $factory;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	public function setUp() :void{		
		WP_Block_Type_Registry::get_instance()->unregister( 'wp-express-checkout/product-block' );
		$this->object = new Product_Block;
		$this->factory = new WP_UnitTest_Factory_For_Post();
	}

	/**
	 * @covers WP_Express_Checkout\Blocks\Product_Block::render_callback
	 */
	public function testRender_callback() {
		$product_id = $this->factory->create(
			[
				'post_type' => \WP_Express_Checkout\Products::$products_slug,
			]
		);
		add_shortcode( 'wp_express_checkout', function( $atts ) { return json_encode( $atts ); } );
		$output = json_decode( $this->object->render_callback( [
			'prod_id'  => $product_id,
			'template' => 42,
		], '' ) );

		$this->assertEquals( $product_id, $output->product_id );
		$this->assertEquals( '42',  $output->template );
		$this->assertEquals( '0',  $output->modal );
	}

	/**
	 * @covers WP_Express_Checkout\Blocks\Product_Block::render_callback
	 */
	public function testRender_callback__no_product() {
		$output = $this->object->render_callback( [], '' );		
		$this->assertStringContainsString( 'wpec-no-product-placeholder',$output );
	}

}
